{"ast":null,"code":"import axios from \"axios\";\nimport Constants from \"../Utilities/Constants\";\nimport { FAIL_REQUEST, GET_CONTACT_LIST, DELETE_CONTACT, MAKE_REQUEST } from \"./ActionType\";\nexport const makeRequest = () => {\n  return {\n    type: MAKE_REQUEST\n  };\n};\nexport const failRequest = err => {\n  return {\n    type: FAIL_REQUEST,\n    payload: err\n  };\n};\nexport const geContactList = data => {\n  return {\n    type: GET_CONTACT_LIST,\n    payload: data\n  };\n};\nexport const deleteContact = () => {\n  return {\n    type: DELETE_CONTACT\n  };\n};\nexport const FetchContactList = () => {\n  return dispatch => {\n    dispatch(makeRequest());\n    //setTimeout(() => {\n    axios.get(Constants.API_URL_GET_ALL_CONTACTS).then(res => {\n      const contactList = res.data;\n      dispatch(geContactList(contactList));\n    }).catch(err => {\n      dispatch(failRequest(err.message));\n    });\n    // }, 2000);\n  };\n};\n_c = FetchContactList;\nexport const RemoveContact = code => {\n  return dispatch => {\n    dispatch(makeRequest());\n    console.log('Eliminando contacto con código:', code);\n    //setTimeout(() => {\n    //axios.delete(Constants.API_URL_DELETE_CONTACT_BY_ID + '/' + code).then(res=>{\n    axios.delete('http://localhost:7064/api/DContact/' + code).then(res => {\n      dispatch(deleteContact());\n      console.log('Contacto eliminado con éxito.');\n    }).catch(err => {\n      dispatch(failRequest(err.message));\n      console.error('Error al eliminar contacto:', err);\n    });\n    // }, 2000);\n  };\n};\n_c2 = RemoveContact;\nvar _c, _c2;\n$RefreshReg$(_c, \"FetchContactList\");\n$RefreshReg$(_c2, \"RemoveContact\");","map":{"version":3,"names":["axios","Constants","FAIL_REQUEST","GET_CONTACT_LIST","DELETE_CONTACT","MAKE_REQUEST","makeRequest","type","failRequest","err","payload","geContactList","data","deleteContact","FetchContactList","dispatch","get","API_URL_GET_ALL_CONTACTS","then","res","contactList","catch","message","_c","RemoveContact","code","console","log","delete","error","_c2","$RefreshReg$"],"sources":["C:/Rony/Tmp/Ejemplo Youtube/Tranzact App 2/addressbook-frontend/src/Redux/Action.js"],"sourcesContent":["import axios from \"axios\"\r\nimport Constants from \"../Utilities/Constants\";\r\nimport { FAIL_REQUEST, GET_CONTACT_LIST, DELETE_CONTACT, MAKE_REQUEST } from \"./ActionType\"\r\n\r\nexport const makeRequest=()=>{\r\n    return{\r\n        type:MAKE_REQUEST\r\n    }\r\n}\r\nexport const failRequest=(err)=>{\r\n    return{\r\n        type:FAIL_REQUEST,\r\n        payload:err\r\n    }\r\n}\r\nexport const geContactList=(data)=>{\r\n    return{\r\n        type:GET_CONTACT_LIST,\r\n        payload:data\r\n    }\r\n}\r\n\r\nexport const deleteContact=()=>{\r\n    return{\r\n        type:DELETE_CONTACT\r\n    }\r\n}\r\n\r\nexport const FetchContactList=()=>{\r\n    return (dispatch)=>{\r\n      dispatch(makeRequest());\r\n      //setTimeout(() => {\r\n        axios.get(Constants.API_URL_GET_ALL_CONTACTS).then(res=>{\r\n            const contactList=res.data;\r\n            dispatch(geContactList(contactList));\r\n          }).catch(err=>{\r\n            dispatch(failRequest(err.message))\r\n          })\r\n     // }, 2000);\r\n     \r\n    }\r\n}\r\n\r\nexport const RemoveContact=(code)=>{\r\n    return (dispatch)=>{\r\n      dispatch(makeRequest());\r\n      console.log('Eliminando contacto con código:', code);\r\n      //setTimeout(() => {\r\n        //axios.delete(Constants.API_URL_DELETE_CONTACT_BY_ID + '/' + code).then(res=>{\r\n        axios.delete('http://localhost:7064/api/DContact/'+code).then(res=>{\r\n            dispatch(deleteContact());\r\n            console.log('Contacto eliminado con éxito.');\r\n          }).catch(err=>{\r\n            dispatch(failRequest(err.message));\r\n            console.error('Error al eliminar contacto:', err);\r\n          })\r\n     // }, 2000);\r\n     \r\n    }\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,SAASC,YAAY,EAAEC,gBAAgB,EAAEC,cAAc,EAAEC,YAAY,QAAQ,cAAc;AAE3F,OAAO,MAAMC,WAAW,GAACA,CAAA,KAAI;EACzB,OAAM;IACFC,IAAI,EAACF;EACT,CAAC;AACL,CAAC;AACD,OAAO,MAAMG,WAAW,GAAEC,GAAG,IAAG;EAC5B,OAAM;IACFF,IAAI,EAACL,YAAY;IACjBQ,OAAO,EAACD;EACZ,CAAC;AACL,CAAC;AACD,OAAO,MAAME,aAAa,GAAEC,IAAI,IAAG;EAC/B,OAAM;IACFL,IAAI,EAACJ,gBAAgB;IACrBO,OAAO,EAACE;EACZ,CAAC;AACL,CAAC;AAED,OAAO,MAAMC,aAAa,GAACA,CAAA,KAAI;EAC3B,OAAM;IACFN,IAAI,EAACH;EACT,CAAC;AACL,CAAC;AAED,OAAO,MAAMU,gBAAgB,GAACA,CAAA,KAAI;EAC9B,OAAQC,QAAQ,IAAG;IACjBA,QAAQ,CAACT,WAAW,CAAC,CAAC,CAAC;IACvB;IACEN,KAAK,CAACgB,GAAG,CAACf,SAAS,CAACgB,wBAAwB,CAAC,CAACC,IAAI,CAACC,GAAG,IAAE;MACpD,MAAMC,WAAW,GAACD,GAAG,CAACP,IAAI;MAC1BG,QAAQ,CAACJ,aAAa,CAACS,WAAW,CAAC,CAAC;IACtC,CAAC,CAAC,CAACC,KAAK,CAACZ,GAAG,IAAE;MACZM,QAAQ,CAACP,WAAW,CAACC,GAAG,CAACa,OAAO,CAAC,CAAC;IACpC,CAAC,CAAC;IACP;EAED,CAAC;AACL,CAAC;AAAAC,EAAA,GAbYT,gBAAgB;AAe7B,OAAO,MAAMU,aAAa,GAAEC,IAAI,IAAG;EAC/B,OAAQV,QAAQ,IAAG;IACjBA,QAAQ,CAACT,WAAW,CAAC,CAAC,CAAC;IACvBoB,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEF,IAAI,CAAC;IACpD;IACE;IACAzB,KAAK,CAAC4B,MAAM,CAAC,qCAAqC,GAACH,IAAI,CAAC,CAACP,IAAI,CAACC,GAAG,IAAE;MAC/DJ,QAAQ,CAACF,aAAa,CAAC,CAAC,CAAC;MACzBa,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC9C,CAAC,CAAC,CAACN,KAAK,CAACZ,GAAG,IAAE;MACZM,QAAQ,CAACP,WAAW,CAACC,GAAG,CAACa,OAAO,CAAC,CAAC;MAClCI,OAAO,CAACG,KAAK,CAAC,6BAA6B,EAAEpB,GAAG,CAAC;IACnD,CAAC,CAAC;IACP;EAED,CAAC;AACL,CAAC;AAAAqB,GAAA,GAhBYN,aAAa;AAAA,IAAAD,EAAA,EAAAO,GAAA;AAAAC,YAAA,CAAAR,EAAA;AAAAQ,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}