{"ast":null,"code":"import axios from \"axios\";\nimport Constants from \"../Utilities/Constants\";\nimport { toast } from \"react-toastify\";\nimport { FAIL_REQUEST, GET_CONTACT_LIST, DELETE_CONTACT, MAKE_REQUEST, ADD_CONTACT, UPDATE_CONTACT } from \"./ActionType\";\nexport const makeRequest = () => {\n  return {\n    type: MAKE_REQUEST\n  };\n};\nexport const failRequest = err => {\n  return {\n    type: FAIL_REQUEST,\n    payload: err\n  };\n};\nexport const geContactList = data => {\n  return {\n    type: GET_CONTACT_LIST,\n    payload: data\n  };\n};\nexport const deleteContact = () => {\n  return {\n    type: DELETE_CONTACT\n  };\n};\nexport const addContact = () => {\n  return {\n    type: ADD_CONTACT\n  };\n};\nexport const updateContact = () => {\n  return {\n    type: UPDATE_CONTACT\n  };\n};\nexport const FetchContactList = () => {\n  return dispatch => {\n    dispatch(makeRequest());\n    //setTimeout(() => {\n    axios.get(Constants.API_URL_GET_ALL_CONTACTS).then(res => {\n      const contactList = res.data;\n      console.log('Primera LLamada.');\n      dispatch(geContactList(contactList));\n      console.log('Segunda LLamada.');\n    }).catch(err => {\n      dispatch(failRequest(err.message));\n      console.log(err.message);\n    });\n    // }, 2000);\n  };\n};\n_c = FetchContactList;\nexport const RemoveContact = code => {\n  return dispatch => {\n    dispatch(makeRequest());\n    console.log('Eliminando contacto con código:', code);\n    //setTimeout(() => {\n    axios.delete(Constants.API_URL_DELETE_CONTACT_BY_ID + '/' + code).then(() => {\n      dispatch(FetchContactList());\n    }).catch(err => {\n      dispatch(failRequest(err.message));\n    });\n    // }, 2000);\n  };\n};\n_c2 = RemoveContact;\nexport const FunctionAddContact = data => {\n  return dispatch => {\n    dispatch(makeRequest());\n    //setTimeout(() => {\n    axios.post(Constants.API_URL_CREATE_CONTACT, data).then(res => {\n      dispatch(FetchContactList());\n      toast.success('Contact Added successfully.');\n    }).catch(err => {\n      dispatch(failRequest(err.message));\n    });\n    // }, 2000);\n  };\n};\n_c3 = FunctionAddContact;\nexport const FunctionUpdateContact = (data, code) => {\n  return dispatch => {\n    dispatch(makeRequest());\n    //setTimeout(() => {\n    axios.put(Constants.API_URL_DELETE_CONTACT_BY_ID + '/' + code, data).then(res => {\n      dispatch(FetchContactList());\n      toast.success('Contact Updated successfully.');\n    }).catch(err => {\n      dispatch(failRequest(err.message));\n    });\n    // }, 2000);\n  };\n};\n_c4 = FunctionUpdateContact;\nexport const FetchContactObj = code => {\n  return dispatch => {\n    dispatch(makeRequest());\n    //setTimeout(() => {\n    axios.get(Constants.API_URL_GET_CONTACT_BY_ID + '/' + code).then(res => {\n      const contactList = res.data;\n      dispatch(getContactObj(contactList));\n    }).catch(err => {\n      dispatch(failRequest(err.message));\n    });\n    // }, 2000);\n  };\n};\n_c5 = FetchContactObj;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"FetchContactList\");\n$RefreshReg$(_c2, \"RemoveContact\");\n$RefreshReg$(_c3, \"FunctionAddContact\");\n$RefreshReg$(_c4, \"FunctionUpdateContact\");\n$RefreshReg$(_c5, \"FetchContactObj\");","map":{"version":3,"names":["axios","Constants","toast","FAIL_REQUEST","GET_CONTACT_LIST","DELETE_CONTACT","MAKE_REQUEST","ADD_CONTACT","UPDATE_CONTACT","makeRequest","type","failRequest","err","payload","geContactList","data","deleteContact","addContact","updateContact","FetchContactList","dispatch","get","API_URL_GET_ALL_CONTACTS","then","res","contactList","console","log","catch","message","_c","RemoveContact","code","delete","API_URL_DELETE_CONTACT_BY_ID","_c2","FunctionAddContact","post","API_URL_CREATE_CONTACT","success","_c3","FunctionUpdateContact","put","_c4","FetchContactObj","API_URL_GET_CONTACT_BY_ID","getContactObj","_c5","$RefreshReg$"],"sources":["C:/Rony/Tmp/Ejemplo Youtube/Tranzact App 2/addressbook-frontend/src/Redux/Action.js"],"sourcesContent":["import axios from \"axios\"\r\nimport Constants from \"../Utilities/Constants\";\r\nimport { toast } from \"react-toastify\"\r\nimport { FAIL_REQUEST, GET_CONTACT_LIST, DELETE_CONTACT, MAKE_REQUEST, ADD_CONTACT, UPDATE_CONTACT} from \"./ActionType\"\r\n\r\nexport const makeRequest = () => {\r\n    return {\r\n        type: MAKE_REQUEST\r\n    }\r\n}\r\nexport const failRequest = (err) => {\r\n    return {\r\n        type: FAIL_REQUEST,\r\n        payload: err\r\n    }\r\n}\r\nexport const geContactList = (data) => {\r\n    return {\r\n        type: GET_CONTACT_LIST,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const deleteContact = () => {\r\n    return {\r\n        type: DELETE_CONTACT\r\n    }\r\n}\r\n\r\nexport const addContact = () => {\r\n    return {\r\n        type: ADD_CONTACT\r\n    }\r\n}\r\n\r\nexport const updateContact = () => {\r\n    return {\r\n        type: UPDATE_CONTACT\r\n    }\r\n}\r\n\r\nexport const FetchContactList = () => {\r\n    return (dispatch) => {\r\n        dispatch(makeRequest());\r\n        //setTimeout(() => {\r\n        axios.get(Constants.API_URL_GET_ALL_CONTACTS).then(res => {\r\n            const contactList = res.data;\r\n            console.log('Primera LLamada.');\r\n            dispatch(geContactList(contactList));\r\n            console.log('Segunda LLamada.');\r\n        }).catch(err => {\r\n            dispatch(failRequest(err.message))\r\n            console.log(err.message);\r\n        })\r\n        // }, 2000);\r\n\r\n    }\r\n}\r\n\r\nexport const RemoveContact = (code) => {\r\n    return (dispatch) => {\r\n        dispatch(makeRequest());\r\n        console.log('Eliminando contacto con código:', code);\r\n        //setTimeout(() => {\r\n        axios\r\n            .delete(Constants.API_URL_DELETE_CONTACT_BY_ID + '/' + code)\r\n            .then(() => {\r\n                dispatch(FetchContactList());\r\n            }).catch(err => {\r\n                dispatch(failRequest(err.message));\r\n            })\r\n        // }, 2000);\r\n\r\n    }\r\n}\r\n\r\nexport const FunctionAddContact = (data) => {\r\n    return (dispatch) => {\r\n        dispatch(makeRequest());\r\n        //setTimeout(() => {\r\n        axios.post(Constants.API_URL_CREATE_CONTACT, data).then(res => {\r\n            dispatch(FetchContactList());\r\n            toast.success('Contact Added successfully.')\r\n        }).catch(err => {\r\n            dispatch(failRequest(err.message))\r\n        })\r\n        // }, 2000);\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const FunctionUpdateContact=(data,code)=>{\r\n    return (dispatch)=>{\r\n      dispatch(makeRequest());\r\n      //setTimeout(() => {\r\n        axios.put(Constants.API_URL_DELETE_CONTACT_BY_ID + '/' + code,data).then(res=>{\r\n            dispatch(FetchContactList());\r\n            toast.success('Contact Updated successfully.')\r\n          }).catch(err=>{\r\n            dispatch(failRequest(err.message))\r\n          })\r\n     // }, 2000);\r\n     \r\n    }\r\n}\r\n\r\nexport const FetchContactObj=(code)=>{\r\n    return (dispatch)=>{\r\n      dispatch(makeRequest());\r\n      //setTimeout(() => {\r\n        axios.get(Constants.API_URL_GET_CONTACT_BY_ID + '/' + code).then(res=>{\r\n            const contactList=res.data;\r\n            dispatch(getContactObj(contactList));\r\n          }).catch(err=>{\r\n            dispatch(failRequest(err.message))\r\n          })\r\n     // }, 2000);\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}