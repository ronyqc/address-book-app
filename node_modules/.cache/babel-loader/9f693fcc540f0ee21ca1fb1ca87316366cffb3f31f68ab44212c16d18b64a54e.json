{"ast":null,"code":"import axios from \"axios\";\nimport Constants from \"../Utilities/Constants\";\nimport { toast } from \"react-toastify\";\nimport { FAIL_REQUEST, GET_CONTACT_LIST, DELETE_CONTACT, MAKE_REQUEST, ADD_CONTACT } from \"./ActionType\";\nexport const makeRequest = () => {\n  return {\n    type: MAKE_REQUEST\n  };\n};\nexport const failRequest = err => {\n  return {\n    type: FAIL_REQUEST,\n    payload: err\n  };\n};\nexport const geContactList = data => {\n  return {\n    type: GET_CONTACT_LIST,\n    payload: data\n  };\n};\nexport const deleteContact = () => {\n  return {\n    type: DELETE_CONTACT\n  };\n};\nexport const addContact = () => {\n  return {\n    type: ADD_CONTACT\n  };\n};\nexport const FetchContactList = () => {\n  return dispatch => {\n    dispatch(makeRequest());\n    //setTimeout(() => {\n    axios.get(Constants.API_URL_GET_ALL_CONTACTS).then(res => {\n      const contactList = res.data;\n      console.log('Primera LLamada.');\n      dispatch(geContactList(contactList));\n      console.log('Segunda LLamada.');\n    }).catch(err => {\n      dispatch(failRequest(err.message));\n      console.log(err.message);\n    });\n    // }, 2000);\n  };\n};\n_c = FetchContactList;\nexport const RemoveContact = code => {\n  return dispatch => {\n    dispatch(makeRequest());\n    console.log('Eliminando contacto con código:', code);\n    //setTimeout(() => {\n    axios.delete(Constants.API_URL_DELETE_CONTACT_BY_ID + '/' + code).then(() => {\n      dispatch(FetchContactList());\n    }).catch(err => {\n      dispatch(failRequest(err.message));\n    });\n    // }, 2000);\n  };\n};\n_c2 = RemoveContact;\nexport const FunctionAddContact = data => {\n  return dispatch => {\n    dispatch(makeRequest());\n    //setTimeout(() => {\n    axios.post(Constants.API_URL_CREATE_CONTACT, data).then(res => {\n      dispatch(addContact());\n      toast.success('Contact Added successfully.');\n    }).catch(err => {\n      dispatch(failRequest(err.message));\n    });\n    // }, 2000);\n  };\n};\n_c3 = FunctionAddContact;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"FetchContactList\");\n$RefreshReg$(_c2, \"RemoveContact\");\n$RefreshReg$(_c3, \"FunctionAddContact\");","map":{"version":3,"names":["axios","Constants","toast","FAIL_REQUEST","GET_CONTACT_LIST","DELETE_CONTACT","MAKE_REQUEST","ADD_CONTACT","makeRequest","type","failRequest","err","payload","geContactList","data","deleteContact","addContact","FetchContactList","dispatch","get","API_URL_GET_ALL_CONTACTS","then","res","contactList","console","log","catch","message","_c","RemoveContact","code","delete","API_URL_DELETE_CONTACT_BY_ID","_c2","FunctionAddContact","post","API_URL_CREATE_CONTACT","success","_c3","$RefreshReg$"],"sources":["C:/Rony/Tmp/Ejemplo Youtube/Tranzact App 2/addressbook-frontend/src/Redux/Action.js"],"sourcesContent":["import axios from \"axios\"\r\nimport Constants from \"../Utilities/Constants\";\r\nimport { toast } from \"react-toastify\"\r\nimport { FAIL_REQUEST, GET_CONTACT_LIST, DELETE_CONTACT, MAKE_REQUEST, ADD_CONTACT } from \"./ActionType\"\r\n\r\nexport const makeRequest = () => {\r\n    return {\r\n        type: MAKE_REQUEST\r\n    }\r\n}\r\nexport const failRequest = (err) => {\r\n    return {\r\n        type: FAIL_REQUEST,\r\n        payload: err\r\n    }\r\n}\r\nexport const geContactList = (data) => {\r\n    return {\r\n        type: GET_CONTACT_LIST,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const deleteContact = () => {\r\n    return {\r\n        type: DELETE_CONTACT\r\n    }\r\n}\r\n\r\nexport const addContact = () => {\r\n    return {\r\n        type: ADD_CONTACT\r\n    }\r\n}\r\n\r\nexport const FetchContactList = () => {\r\n    return (dispatch) => {\r\n        dispatch(makeRequest());\r\n        //setTimeout(() => {\r\n        axios.get(Constants.API_URL_GET_ALL_CONTACTS).then(res => {\r\n            const contactList = res.data;\r\n            console.log('Primera LLamada.');\r\n            dispatch(geContactList(contactList));\r\n            console.log('Segunda LLamada.');\r\n        }).catch(err => {\r\n            dispatch(failRequest(err.message))\r\n            console.log(err.message);\r\n        })\r\n        // }, 2000);\r\n\r\n    }\r\n}\r\n\r\nexport const RemoveContact = (code) => {\r\n    return (dispatch) => {\r\n        dispatch(makeRequest());\r\n        console.log('Eliminando contacto con código:', code);\r\n        //setTimeout(() => {\r\n        axios\r\n            .delete(Constants.API_URL_DELETE_CONTACT_BY_ID + '/' + code)\r\n            .then(() => {\r\n                dispatch(FetchContactList());\r\n            }).catch(err => {\r\n                dispatch(failRequest(err.message));\r\n            })\r\n        // }, 2000);\r\n\r\n    }\r\n}\r\n\r\nexport const FunctionAddContact = (data) => {\r\n    return (dispatch) => {\r\n        dispatch(makeRequest());\r\n        //setTimeout(() => {\r\n        axios.post(Constants.API_URL_CREATE_CONTACT, data).then(res => {\r\n            dispatch(addContact());\r\n            toast.success('Contact Added successfully.')\r\n        }).catch(err => {\r\n            dispatch(failRequest(err.message))\r\n        })\r\n        // }, 2000);\r\n\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}